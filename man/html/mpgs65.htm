<html><head><title>Inferno Reference </title></head>
<body bgcolor=antiquewhite>
 
<a href="mpgs.htm"><img src="Top.gif" alt="[Top]" align=bottom></a> <a href="mpgs64.htm"><img src="Previous.gif" alt="[Prev]" align=bottom></a> <a href="mpgs66.htm"><img src="Next.gif" alt="[Next]" align=bottom></a> 
<hr><br>
 
<a name="843640">
<center><h1> linalg </h1></center>
</a><a name="843641">
linalg - linear algebra primitives<p>
</a><a name="843642">
<h2> Synopsis</h2>
</a><pre><tt>include "math.m";
math:= load Math Math-&gt;PATH;

dot         : fn(x, y: array of real)  : real;
norm1, norm2: fn(x: array of real)     : real;
iamax       : fn(x: array of real)     : int;
gemm        : fn(transa, transb: int, # upper case N or T
                 m, n, k: int, alpha      : real,
                 a: array of real, lda    : int,
                 b: array of real, ldb    : int, beta: real,
                 c: array of real, ldc    : int);
sort        : fn(x: array of real, p: array of int);
</tt></pre></p><a name="843655">
<h2> Description</h2>
</a><a name="843656">
These routines implement the basic functions of linear algebra. The standard vector inner product and norms are defined:<p>
</a><pre><tt>	dot(<em>x</em>,<em> y</em>) = sum(<em>x</em> [<em>i</em>]*<em> y</em> [<em>i</em>])   
	norm1(<em>x</em>) = sum(fabs(<em>x</em> [<em>i</em>]))   
	norm2(<em>x</em>) = sqrt(dot(<em>x</em>, <em>x</em>))
</tt></pre></p><a name="843660">
For the infinity norm, the function iamax(<em>x</em>) computes an integer <em>i</em> such that <kbd>fabs(x[i])</kbd> is maximal. These are all standard BLAS (basic linear algebra subroutines) except that in Inferno they apply only to contiguous (unit stride) vectors.<p>
</a><a name="843661">
We assume the convention that matrices are represented as singly-subscripted arrays with Fortran storage order. So for an <em>m</em> by <em>n</em> matrix <em>A</em>, we use loops with 0&lt;=<em> i</em> &lt; <em>m</em> and 0&lt;= <em>j</em> &lt;<em> n</em> and access <em>A [i + m *j]</em>.<p>
</a><a name="843662">
Rather than provide the huge number of entry points in BLAS2 and BLAS3, Inferno provides the matrix multiply primitive, gemm, defined by<p>
</a><a name="843663">
<em>	</em><strong>A = </strong><img src="chars/alpha.gif"><strong>* A'*B' + </strong><img src="chars/beta.gif"><strong>*C</strong><p>
</a><a name="843664">
where the apostrophes indicate an optional transposition. As shown by the work of Kagstrom, Ling, and Van Loan, the other BLAS functionality can be built efficiently on top of gemm.<p>
</a><a name="843665">
Matrix <em>a</em> ' is <em>m</em> by <em>k</em>, matrix <em>b</em> ' is <em>k</em> by <em>n</em>, and matrix <em>c</em> is <em>m</em> by <em>n</em>. Here <em>a</em> ' means <em>a</em> &#32;<em>(</em>a &#32;') if <em>transa</em> is the constant 'N' ('T'), and similarly for <em>b</em> '. The sizes <em>m</em>, <em>n</em>, and <em>k</em> denote the 'active' part of the matrix. The parameters <em>lda</em>, <em>ldb</em>, and <em>ldc</em> denote the 'leading dimension' or size for purposes of indexing. So to loop over <em>c</em> use loops with 0&lt;= <em>i</em> &lt; <em>m</em> and 0&lt;= <em>j</em> &lt; <em>j</em> and access <em>a</em> [<em>i</em> +<em>ldc</em> *<em>j</em>].<p>
</a><a name="843666">
The sorting function <kbd>sort</kbd> (<em>x, p</em>) updates a 0-origin permutation <em>p</em> so that <em>x</em> &#32;[<em>p</em>[<em>i</em>]] &#32;&lt;= &#32;x [p[i+1]], leaving <em>x</em> unchanged.<p>
</a><a name="843667">
<h2> See Also</h2>
</a><a name="843668">
<a href="mpgs62.htm#848707"><em>Limbo Math Modules</em></a><p>
</a><a name="843669">
Bo Kagstrom, Per Ling, and Charles Van Loan. Portable high performance GEMM-based level 3 BLAS. In R.F. Sincovec et al., editor, parallel Processing for Scientific Computing, pages 339-346. SIAM Publications, 1993.<p>
</a>
<hr><br>
 
<a href="mpgs.htm"><img src="Top.gif" alt="[Top]" align=bottom></a> <a href="mpgs64.htm"><img src="Previous.gif" alt="[Prev]" align=bottom></a> <a href="mpgs66.htm"><img src="Next.gif" alt="[Next]" align=bottom></a> 
<hr><br>



<address>
<a href="mailto:infernosupport@lucent.com">infernosupport@lucent.com</a>
</address>

<i>Copyright &#169; 1996,Lucent Technologies, Inc.   All rights
reserved.</i>


<!-- Last updated: 10/18/96 15:49:33 -->

</body>
</html>
